'use strict';

const RequestResponseController = require('castv2-client').RequestResponseController;

const BrowserController = class BrowserController extends RequestResponseController {
	constructor(client, sourceId, destinationId) {
		super(client, sourceId, destinationId, 'urn:x-cast:' + BrowserController.APP_URN);

		this.on('message', onmessage);
		this.once('close', onclose);

		var self = this;

		function onmessage(data, broadcast) {
			if (data.type === 'CLOSE') {
				self.emit('disconnect');
			}
		}

		function onclose() {
			self.removeListener('message', onmessage);
		}
	}

	redirect(url, options, callback) {
		if (typeof options === 'function') {
			callback = options;
			options = {};
		}

		const args = {};

		args.url = url;

		// we do not map options yet since Athom Browser Redirect doesn't support any

		this.request({ command: 'redirect', args }, (err, response) => {
			if (err) return callback(err);

			callback(null, response.status);
		});
	}
}

module.exports = BrowserController;
